# -*- coding: utf-8 -*-
"""Ethereum  Gas Price Estimator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LJDHZqGoV76nv8eHnqACIlpOKUS1EwtR
"""

import requests
import os
from dotenv import load_dotenv
import time

def get_gas_price(api_key):
    url = f'https://api.etherscan.io/api?module=proxy&action=eth_gasPrice&apikey={api_key}'
    try:
        response = requests.get(url)
        response.raise_for_status()  # Raises an HTTPError for bad responses
        gas_price_wei = int(response.json()['result'], 16)
        gas_price_ether = gas_price_wei / 10**18  # Convert from Wei to Ether
        return round(gas_price_ether, 8)  # Round to 8 decimal places
    except requests.RequestException as e:
        return f"Error fetching gas price: {str(e)}"

def main():
    load_dotenv()  # Load environment variables from .env file
    api_key = os.getenv('ETHERSCAN_API_KEY')

    if not api_key:
        print("Error: ETHERSCAN_API_KEY not found in .env file")
        return

    while True:
        print(f"Current gas price: {get_gas_price(api_key)} ETH")
        time.sleep(60)  # Wait for 60 seconds before the next request

if __name__ == "__main__":
    main()